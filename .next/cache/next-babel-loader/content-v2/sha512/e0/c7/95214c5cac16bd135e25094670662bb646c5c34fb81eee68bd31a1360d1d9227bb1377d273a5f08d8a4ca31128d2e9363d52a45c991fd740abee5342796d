{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\n\nconst ValidarFormulario = (stateInicial, validar, fn) => {\n  const {\n    0: valores,\n    1: setValores\n  } = useState(stateInicial);\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: submitForm,\n    1: setSubmitForm\n  } = useState(false);\n  useEffect(() => {\n    if (submitForm) {\n      const sinError = Object.keys(error).length === 0; //cuando no haya errores\n\n      if (sinError) {\n        //Entonces ejecuta fn\n        fn();\n      }\n\n      setSubmitForm(false);\n    }\n  }, []); //Funcion que guarda los datos que escribe el usuario\n\n  const OnChange = e => {\n    setValores(_objectSpread(_objectSpread({}, valores), {}, {\n      [e.target.name]: [e.target.value]\n    }));\n  }; //Funcion cuando se envía el formulario\n\n\n  const OnSubmit = e => {\n    e.preventDefault();\n    const erroresValidacion = validar(valores);\n    setError(erroresValidacion); //Si hay errores pasa al state de error\n\n    setSubmitForm(true); //Pasa a true para que se ejecute el useEffect\n  }; //Funcion para que desaparezcan los errores de validación mientras se escribe en el form\n\n\n  const OnBlur = e => {\n    e.preventDefault();\n    const erroresValidacion = validar(valores);\n    setError(erroresValidacion);\n  };\n\n  return {\n    valores,\n    error,\n    submitForm,\n    OnChange,\n    OnSubmit,\n    OnBlur\n  };\n};\n\nexport default ValidarFormulario;","map":{"version":3,"sources":["C:/Users/pedro/Desktop/Pedro/UdemyReact/paginaVentaProductos/hooks/validarFormulario.js"],"names":["React","useEffect","useState","ValidarFormulario","stateInicial","validar","fn","valores","setValores","error","setError","submitForm","setSubmitForm","sinError","Object","keys","length","OnChange","e","target","name","value","OnSubmit","preventDefault","erroresValidacion","OnBlur"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,YAAD,EAAeC,OAAf,EAAwBC,EAAxB,KAA+B;AAErD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAACE,YAAD,CAAtC;AACA,QAAK;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAAA,OAACS,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,UAAH,EAAc;AACV,YAAME,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,KAA8B,CAA/C,CADU,CACwC;;AAElD,UAAGH,QAAH,EAAY;AACR;AACAP,QAAAA,EAAE;AACL;;AACDM,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AAGJ,GAZQ,EAYN,EAZM,CAAT,CANqD,CAoBrD;;AAEA,QAAMK,QAAQ,GAAGC,CAAC,IAAI;AAClBV,IAAAA,UAAU,iCACHD,OADG;AAEN,OAACW,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkB,CAACF,CAAC,CAACC,MAAF,CAASE,KAAV;AAFZ,OAAV;AAIH,GALD,CAtBqD,CA6BrD;;;AAEA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,iBAAiB,GAAGnB,OAAO,CAACE,OAAD,CAAjC;AACAG,IAAAA,QAAQ,CAACc,iBAAD,CAAR,CAJkB,CAIW;;AAC7BZ,IAAAA,aAAa,CAAC,IAAD,CAAb,CALkB,CAKG;AACxB,GAND,CA/BqD,CAuCrD;;;AACA,QAAMa,MAAM,GAAGP,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,iBAAiB,GAAGnB,OAAO,CAACE,OAAD,CAAjC;AACAG,IAAAA,QAAQ,CAACc,iBAAD,CAAR;AACH,GALD;;AAOA,SAAO;AACHjB,IAAAA,OADG;AAEHE,IAAAA,KAFG;AAGHE,IAAAA,UAHG;AAIHM,IAAAA,QAJG;AAKHK,IAAAA,QALG;AAMHG,IAAAA;AANG,GAAP;AAQH,CAvDD;;AAyDA,eAAetB,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ValidarFormulario = (stateInicial, validar, fn) => {\r\n\r\n    const [valores, setValores] = useState(stateInicial);\r\n    const[error, setError] = useState({});\r\n    const [submitForm, setSubmitForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(submitForm){\r\n            const sinError = Object.keys(error).length === 0; //cuando no haya errores\r\n\r\n            if(sinError){\r\n                //Entonces ejecuta fn\r\n                fn();\r\n            }\r\n            setSubmitForm(false);\r\n        }\r\n\r\n\r\n    }, []);\r\n\r\n    //Funcion que guarda los datos que escribe el usuario\r\n\r\n    const OnChange = e => {\r\n        setValores({\r\n            ...valores,\r\n            [e.target.name] : [e.target.value]\r\n        });\r\n    }\r\n\r\n    //Funcion cuando se envía el formulario\r\n\r\n    const OnSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const erroresValidacion = validar(valores);\r\n        setError(erroresValidacion); //Si hay errores pasa al state de error\r\n        setSubmitForm(true); //Pasa a true para que se ejecute el useEffect\r\n    }\r\n\r\n    //Funcion para que desaparezcan los errores de validación mientras se escribe en el form\r\n    const OnBlur = e => {  \r\n        e.preventDefault();\r\n\r\n        const erroresValidacion = validar(valores);\r\n        setError(erroresValidacion);\r\n    }\r\n\r\n    return {\r\n        valores,\r\n        error,\r\n        submitForm,\r\n        OnChange,\r\n        OnSubmit,\r\n        OnBlur\r\n    };\r\n};\r\n\r\nexport default ValidarFormulario;"]},"metadata":{},"sourceType":"module"}